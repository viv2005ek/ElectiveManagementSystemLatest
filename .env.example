# =============================================================================
# ELECTIVE MANAGEMENT SYSTEM - ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your actual values
# DO NOT commit .env file to version control

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL database connection string
# Format: postgresql://username:password@host:port/database_name
DATABASE_URL=postgresql://username:password@host:port/database_name

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Port for the Express server to run on
PORT=8080

# Environment mode (development, production, staging)
NODE_ENV=development

# CORS origin for frontend access
# Use * for development, specific domain for production
CORS_ORIGIN=http://localhost:3000

# Host configuration for production
HOST=localhost

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================
# JWT secret key for token signing (use a strong, random string)
# Generate with: openssl rand -base64 32
JWT_SECRET=your-super-secret-jwt-key-here-make-it-long-and-random

# =============================================================================
# CLIENT/FRONTEND CONFIGURATION
# =============================================================================
# Backend API base URL for client requests
VITE_BASE=http://localhost:8080

# Backend URL for API calls
VITE_BACKEND_URL=http://localhost:8080

# =============================================================================
# DOCKER CONFIGURATION (for deployment)
# =============================================================================
# Docker Hub credentials for CI/CD
DOCKERHUB_USERNAME=your-dockerhub-username
DOCKERHUB_TOKEN=your-dockerhub-access-token

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================
# SSH credentials for deployment server
DEPLOYMENT_HOST=your-server-ip
DEPLOYMENT_USERNAME=your-server-username
DEPLOYMENT_PASSWORD=your-server-password
DEPLOYMENT_PORT=22

# =============================================================================
# OPTIONAL: EMAIL CONFIGURATION (for future features)
# =============================================================================
# SMTP configuration for sending emails (notifications, password reset)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password

# =============================================================================
# OPTIONAL: FILE STORAGE (for future features)
# =============================================================================
# AWS S3 or similar for file uploads (profile pictures, documents)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=your-bucket-name

# =============================================================================
# OPTIONAL: EXTERNAL SERVICES (for future integrations)
# =============================================================================
# Redis for caching (if you want to add caching)
# REDIS_URL=redis://localhost:6379

# Logging service (if you want external logging)
# LOG_LEVEL=info
# EXTERNAL_LOG_SERVICE_URL=your-logging-service-url
# EXTERNAL_LOG_API_KEY=your-logging-api-key
